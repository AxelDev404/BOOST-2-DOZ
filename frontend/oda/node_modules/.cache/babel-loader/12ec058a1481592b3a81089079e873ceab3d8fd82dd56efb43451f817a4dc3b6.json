{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alexa\\\\Desktop\\\\webentrylevel\\\\todo\\\\Todo\\\\frontend\\\\oda\\\\src\\\\components\\\\CambiaTesto.jsx\",\n  _s2 = $RefreshSig$();\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function EditableTitle({\n  defaultTitle\n}) {\n  _s2();\n  var _s = $RefreshSig$();\n  const [isEditing, setIsEditing] = useState(false);\n  const [title, setTitle] = useState(defaultTitle);\n  const handleBlur = () => {\n    _s();\n    setIsEditing(false);\n    useEffect(() => {\n      fetch('api/tasks/', {\n        headers: {\n          'Authorization': `Bearer ${token_access}`\n        }\n      }).then(res => {\n        if (!res.ok) {\n          throw new Error('Qualcosa e andato storto');\n        }\n        return res.json();\n      }).then(data => {\n        setTask(data);\n      }).catch(err => console.log(err.message));\n    }, []);\n    console.log(\"Titolo aggiornato:\", title);\n  };\n  _s(handleBlur, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: isEditing ? /*#__PURE__*/_jsxDEV(\"input\", {\n      value: title,\n      onChange: e => setTitle(e.target.value),\n      onBlur: handleBlur,\n      onKeyDown: e => {\n        if (e.key === 'Enter') {\n          handleBlur();\n        }\n      },\n      autoFocus: true,\n      style: {\n        backgroundColor: 'white',\n        color: 'black'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n      onClick: () => setIsEditing(true),\n      style: {\n        cursor: 'pointer'\n      },\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s2(EditableTitle, \"JhH7g0UCT+8/vPFwGsNioYmvdFc=\");\n_c = EditableTitle;\nvar _c;\n$RefreshReg$(_c, \"EditableTitle\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","EditableTitle","defaultTitle","_s2","_s","$RefreshSig$","isEditing","setIsEditing","title","setTitle","handleBlur","useEffect","fetch","headers","token_access","then","res","ok","Error","json","data","setTask","catch","err","console","log","message","children","value","onChange","e","target","onBlur","onKeyDown","key","autoFocus","style","backgroundColor","color","fileName","_jsxFileName","lineNumber","columnNumber","onClick","cursor","_c","$RefreshReg$"],"sources":["C:/Users/alexa/Desktop/webentrylevel/todo/Todo/frontend/oda/src/components/CambiaTesto.jsx"],"sourcesContent":["import { useState } from 'react';\r\n\r\nexport default function EditableTitle({ defaultTitle }) {\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [title, setTitle] = useState(defaultTitle);\r\n\r\n  const handleBlur = () => {\r\n    setIsEditing(false);\r\n    \r\n    useEffect(()=>{\r\n    \r\n            fetch(\r\n                'api/tasks/', \r\n                {\r\n    \r\n                    headers : {\r\n                \r\n                        'Authorization' : `Bearer ${token_access}`,\r\n                    }\r\n                   \r\n                }\r\n            )\r\n            .then(res => \r\n                {\r\n                    if(!res.ok){\r\n                        throw new Error('Qualcosa e andato storto')\r\n                    }\r\n                    return res.json()\r\n                }\r\n            )\r\n            .then(\r\n                data => \r\n                {\r\n                    setTask(data)\r\n                  \r\n                }\r\n            )\r\n            .catch(err => console.log(err.message))\r\n    \r\n        },[]);\r\n    console.log(\"Titolo aggiornato:\", title);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {isEditing ? (\r\n        <input\r\n          value={title}\r\n          onChange={(e) => setTitle(e.target.value)}\r\n          onBlur={handleBlur}\r\n          onKeyDown={(e) => {\r\n            if (e.key === 'Enter') {\r\n              handleBlur();\r\n            }\r\n          }}\r\n          autoFocus\r\n          style={{ backgroundColor: 'white', color: 'black' }}\r\n        />\r\n      ) : (\r\n        <h1 onClick={() => setIsEditing(true)} style={{ cursor: 'pointer' }}>\r\n          {title}\r\n        </h1>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,eAAe,SAASC,aAAaA,CAAC;EAAEC;AAAa,CAAC,EAAE;EAAAC,GAAA;EAAA,IAAAC,EAAA,GAAAC,YAAA;EACtD,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAACI,YAAY,CAAC;EAEhD,MAAMQ,UAAU,GAAGA,CAAA,KAAM;IAAAN,EAAA;IACvBG,YAAY,CAAC,KAAK,CAAC;IAEnBI,SAAS,CAAC,MAAI;MAENC,KAAK,CACD,YAAY,EACZ;QAEIC,OAAO,EAAG;UAEN,eAAe,EAAG,UAAUC,YAAY;QAC5C;MAEJ,CACJ,CAAC,CACAC,IAAI,CAACC,GAAG,IACL;QACI,IAAG,CAACA,GAAG,CAACC,EAAE,EAAC;UACP,MAAM,IAAIC,KAAK,CAAC,0BAA0B,CAAC;QAC/C;QACA,OAAOF,GAAG,CAACG,IAAI,CAAC,CAAC;MACrB,CACJ,CAAC,CACAJ,IAAI,CACDK,IAAI,IACJ;QACIC,OAAO,CAACD,IAAI,CAAC;MAEjB,CACJ,CAAC,CACAE,KAAK,CAACC,GAAG,IAAIC,OAAO,CAACC,GAAG,CAACF,GAAG,CAACG,OAAO,CAAC,CAAC;IAE3C,CAAC,EAAC,EAAE,CAAC;IACTF,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEjB,KAAK,CAAC;EAC1C,CAAC;EAACJ,EAAA,CAnCIM,UAAU;EAqChB,oBACEV,OAAA;IAAA2B,QAAA,EACGrB,SAAS,gBACRN,OAAA;MACE4B,KAAK,EAAEpB,KAAM;MACbqB,QAAQ,EAAGC,CAAC,IAAKrB,QAAQ,CAACqB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAC1CI,MAAM,EAAEtB,UAAW;MACnBuB,SAAS,EAAGH,CAAC,IAAK;QAChB,IAAIA,CAAC,CAACI,GAAG,KAAK,OAAO,EAAE;UACrBxB,UAAU,CAAC,CAAC;QACd;MACF,CAAE;MACFyB,SAAS;MACTC,KAAK,EAAE;QAAEC,eAAe,EAAE,OAAO;QAAEC,KAAK,EAAE;MAAQ;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrD,CAAC,gBAEF1C,OAAA;MAAI2C,OAAO,EAAEA,CAAA,KAAMpC,YAAY,CAAC,IAAI,CAAE;MAAC6B,KAAK,EAAE;QAAEQ,MAAM,EAAE;MAAU,CAAE;MAAAjB,QAAA,EACjEnB;IAAK;MAAA+B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ;EACL;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACvC,GAAA,CA/DuBF,aAAa;AAAA4C,EAAA,GAAb5C,aAAa;AAAA,IAAA4C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}